version: '3.9'

# Custom bridged network named 'network' for inter-container communication.
networks:
  network:
    driver: bridge

# Volume named 'db-data' for persistent storage of database data.
volumes:
  db-data:

services:
  db:
    image: bitnami/postgresql:latest # Uses the latest Bitnami PostgreSQL image.
    container_name: postgresql-db # Sets the container name to 'postgresql-db'.
    restart: unless-stopped # Configures the container to always restart unless it is explicitly stopped.
    ports:
      - '${POSTGRESQL_PORT}:5432' # Maps the host port specified by the environment variable POSTGRESQL_PORT to the container's port 5432.
    environment:
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME} # Sets the PostgreSQL username from an environment variable.
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD} # Sets the PostgreSQL password from an environment variable.
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE} # Sets the PostgreSQL database name from an environment variable.
    volumes:
      - db-data:/var/lib/postgresql/data # Mounts the 'db-data' volume to persist database data.
    networks:
      - network # Connects the database container to the custom 'network'.

  backend:
    build: ./backend # Builds the backend service from the Dockerfile located in the './backend' directory.
    container_name: flask-app # Sets the container name to 'flask-app'.
    restart: unless-stopped # Configures the container to always restart unless it is explicitly stopped.
    ports:
      - '${FLASK_PORT}:5000' # Maps the host port specified by the environment variable FLASK_PORT to the container's port 5000.
    environment:
      - FLASK_DATABASE_URI=postgresql://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@db:5432/${POSTGRESQL_DATABASE} # Sets the Flask database URI for PostgreSQL connection.
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY} # Sets the Flask secret key from an environment variable.
      - FLASK_JWT_SECRET_KEY=${FLASK_JWT_SECRET_KEY} # Sets the Flask JWT secret key from an environment variable.
    volumes:
      - ./backend:/backend # Mounts the './backend' directory to the container for code synchronization.
    networks:
      - network # Connects the backend container to the custom 'network'.
    depends_on:
      - db # Ensures that the 'db' service is started before the backend service.
